{"ast":null,"code":"import _slicedToArray from \"/Users/alex/Downloads/draggable-div-element-react-hook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nexport var useDrag = function useDrag(_ref) {\n  _s();\n  var ref = _ref.ref,\n    _ref$calculateFor = _ref.calculateFor,\n    calculateFor = _ref$calculateFor === void 0 ? \"topLeft\" : _ref$calculateFor,\n    id = _ref.id,\n    visibleArea = _ref.visibleArea,\n    updateArea = _ref.updateArea;\n  var Xs = [400, 483, 313, 245, 480];\n  var Ys = [476, 350, 276, 435, 211];\n  var initialX = Xs[id];\n  var initialY = Ys[id];\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    dragInfo = _useState2[0],\n    setDragInfo = _useState2[1];\n  var _useState3 = useState({\n      x: initialX,\n      y: initialY\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    finalPosition = _useState4[0],\n    setFinalPosition = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isDragging = _useState6[0],\n    setIsDragging = _useState6[1];\n  var overlappingArea = 0;\n  var updateFinalPosition = useCallback(function (width, height, x, y) {\n    if (calculateFor === \"bottomRight\") {\n      setFinalPosition({\n        x: Math.max(Math.min(window.innerWidth - width, window.innerWidth - (x + width)), 0),\n        y: Math.max(Math.min(window.innerHeight - height, window.innerHeight - (y + height)), 0)\n      });\n      return;\n    }\n    setFinalPosition({\n      x: Math.min(Math.max(0, x), window.innerWidth - width),\n      y: Math.min(Math.max(0, y), window.innerHeight - height)\n    });\n  }, [calculateFor]);\n  var handleMouseUp = function handleMouseUp(evt) {\n    evt.preventDefault();\n    setIsDragging(false);\n  };\n  var handleMouseDown = function handleMouseDown(evt) {\n    evt.preventDefault();\n    var clientX = evt.clientX,\n      clientY = evt.clientY;\n    var draggableElement = ref.current;\n    if (!draggableElement) {\n      return;\n    }\n    var _draggableElement$get = draggableElement.getBoundingClientRect(),\n      top = _draggableElement$get.top,\n      left = _draggableElement$get.left,\n      width = _draggableElement$get.width,\n      height = _draggableElement$get.height;\n    setIsDragging(true);\n    setDragInfo({\n      startX: clientX,\n      startY: clientY,\n      top: top,\n      left: left,\n      width: width,\n      height: height\n    });\n  };\n  var handleMouseMove = useCallback(function (evt) {\n    var draggableElement = ref.current;\n    if (!isDragging || !draggableElement) return;\n    evt.preventDefault();\n    var clientX = evt.clientX,\n      clientY = evt.clientY;\n    var position = {\n      x: dragInfo.startX - clientX,\n      y: dragInfo.startY - clientY\n    };\n    var top = dragInfo.top,\n      left = dragInfo.left,\n      width = dragInfo.width,\n      height = dragInfo.height;\n    var current_coords = draggableElement.getBoundingClientRect();\n    //console.log(draggableElement.getBoundingClientRect())\n    var redBoxCoords = document.getElementById('red-box').getBoundingClientRect();\n    // check if the current position of the draggable element overlaps with the red box\n    if (current_coords.left < redBoxCoords.right && current_coords.right > redBoxCoords.left && current_coords.top < redBoxCoords.bottom && current_coords.bottom > redBoxCoords.top) {\n      // calculate the overlapping area\n      overlappingArea = Math.max(0, Math.min(current_coords.right, redBoxCoords.right) - Math.max(current_coords.left, redBoxCoords.left)) * Math.max(0, Math.min(current_coords.bottom, redBoxCoords.bottom) - Math.max(current_coords.top, redBoxCoords.top));\n    } else {\n      // if it is not, set the overlapping area to 0\n      overlappingArea = 0;\n    }\n    console.log(overlappingArea);\n    updateFinalPosition(width, height, left - position.x, top - position.y);\n    return function () {\n      return overlappingArea;\n    };\n  }, [isDragging, dragInfo, ref, updateFinalPosition]);\n  var recalculate = function recalculate(width, height) {\n    var draggableElement = ref.current;\n    var _draggableElement$get2 = draggableElement.getBoundingClientRect(),\n      top = _draggableElement$get2.top,\n      left = _draggableElement$get2.left,\n      boundingWidth = _draggableElement$get2.width,\n      boundingHeight = _draggableElement$get2.height;\n    updateFinalPosition(width !== null && width !== void 0 ? width : boundingWidth, height !== null && height !== void 0 ? height : boundingHeight, left, top);\n  };\n  useEffect(function () {\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    document.addEventListener(\"mouseup\", handleMouseUp);\n    return function () {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [handleMouseMove]);\n  return {\n    position: finalPosition,\n    handleMouseDown: handleMouseDown,\n    recalculate: recalculate,\n    handleMouseMove: handleMouseMove\n  };\n};\n_s(useDrag, \"6EYRnMAQOWOSUti8x3KCIaDulOA=\");","map":{"version":3,"names":["useCallback","useEffect","useState","useDrag","_ref","_s","ref","_ref$calculateFor","calculateFor","id","visibleArea","updateArea","Xs","Ys","initialX","initialY","_useState","_useState2","_slicedToArray","dragInfo","setDragInfo","_useState3","x","y","_useState4","finalPosition","setFinalPosition","_useState5","_useState6","isDragging","setIsDragging","overlappingArea","updateFinalPosition","width","height","Math","max","min","window","innerWidth","innerHeight","handleMouseUp","evt","preventDefault","handleMouseDown","clientX","clientY","draggableElement","current","_draggableElement$get","getBoundingClientRect","top","left","startX","startY","handleMouseMove","position","current_coords","redBoxCoords","document","getElementById","right","bottom","console","log","recalculate","_draggableElement$get2","boundingWidth","boundingHeight","addEventListener","removeEventListener"],"sources":["/Users/alex/Downloads/draggable-div-element-react-hook/src/useDrag.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nexport const useDrag = ({ ref, calculateFor = \"topLeft\", id, visibleArea, updateArea }) => {\n  const Xs = [400, 483, 313, 245, 480];\n  const Ys = [476, 350, 276, 435, 211];\n  const initialX = Xs[id];\n  const initialY = Ys[id];\n  const [dragInfo, setDragInfo] = useState();\n  const [finalPosition, setFinalPosition] = useState({\n    x: initialX,\n    y: initialY,\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  let overlappingArea = 0;\n\n  const updateFinalPosition = useCallback(\n    (width, height, x, y) => {\n      if (calculateFor === \"bottomRight\") {\n        setFinalPosition({\n          x: Math.max(\n            Math.min(\n              window.innerWidth - width,\n              window.innerWidth - (x + width)\n            ),\n            0\n          ),\n          y: Math.max(\n            Math.min(\n              window.innerHeight - height,\n              window.innerHeight - (y + height)\n            ),\n            0\n          )\n        });\n\n        return;\n      }\n\n      setFinalPosition({\n        x: Math.min(Math.max(0, x), window.innerWidth - width),\n        y: Math.min(Math.max(0, y), window.innerHeight - height)\n      });\n    },\n    [calculateFor]\n  );\n\n  const handleMouseUp = (evt) => {\n    evt.preventDefault();\n\n    setIsDragging(false);\n  };\n\n  const handleMouseDown = (evt) => {\n    evt.preventDefault();\n\n    const { clientX, clientY } = evt;\n    const { current: draggableElement } = ref;\n\n    if (!draggableElement) {\n      return;\n    }\n\n    const {\n      top,\n      left,\n      width,\n      height\n    } = draggableElement.getBoundingClientRect();\n\n    setIsDragging(true);\n    setDragInfo({\n      startX: clientX,\n      startY: clientY,\n      top,\n      left,\n      width,\n      height\n    });\n\n  };\n\n  const handleMouseMove = useCallback(\n    (evt) => {\n      const { current: draggableElement } = ref;\n\n      if (!isDragging || !draggableElement) return;\n\n      evt.preventDefault();\n\n      const { clientX, clientY } = evt;\n\n      const position = {\n        x: dragInfo.startX - clientX,\n        y: dragInfo.startY - clientY\n      };\n\n      const { top, left, width, height } = dragInfo;\n\n      const current_coords = draggableElement.getBoundingClientRect();\n      //console.log(draggableElement.getBoundingClientRect())\n      const redBoxCoords = document.getElementById('red-box').getBoundingClientRect();\n      // check if the current position of the draggable element overlaps with the red box\n      if (current_coords.left < redBoxCoords.right && current_coords.right > redBoxCoords.left && current_coords.top < redBoxCoords.bottom && current_coords.bottom > redBoxCoords.top) {\n        // calculate the overlapping area\n        overlappingArea = Math.max(0, Math.min(current_coords.right, redBoxCoords.right) - Math.max(current_coords.left, redBoxCoords.left)) * Math.max(0, Math.min(current_coords.bottom, redBoxCoords.bottom) - Math.max(current_coords.top, redBoxCoords.top));\n      } else {\n        // if it is not, set the overlapping area to 0\n        overlappingArea = 0;\n      }\n      console.log(overlappingArea);\n      updateFinalPosition(width, height, left - position.x, top - position.y);\n      return () => overlappingArea;\n    },\n    [isDragging, dragInfo, ref, updateFinalPosition]\n  );\n\n  const recalculate = (width, height) => {\n    const { current: draggableElement } = ref;\n    const {\n      top,\n      left,\n      width: boundingWidth,\n      height: boundingHeight\n    } = draggableElement.getBoundingClientRect();\n\n    updateFinalPosition(\n      width ?? boundingWidth,\n      height ?? boundingHeight,\n      left,\n      top\n    );\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    document.addEventListener(\"mouseup\", handleMouseUp);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [handleMouseMove]);\n\n  return {\n    position: finalPosition,\n    handleMouseDown,\n    recalculate,\n    handleMouseMove,\n  };\n};\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAAC,IAAA,EAAuE;EAAAC,EAAA;EAAA,IAAjEC,GAAG,GAAAF,IAAA,CAAHE,GAAG;IAAAC,iBAAA,GAAAH,IAAA,CAAEI,YAAY;IAAZA,YAAY,GAAAD,iBAAA,cAAG,SAAS,GAAAA,iBAAA;IAAEE,EAAE,GAAAL,IAAA,CAAFK,EAAE;IAAEC,WAAW,GAAAN,IAAA,CAAXM,WAAW;IAAEC,UAAU,GAAAP,IAAA,CAAVO,UAAU;EAClF,IAAMC,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpC,IAAMC,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpC,IAAMC,QAAQ,GAAGF,EAAE,CAACH,EAAE,CAAC;EACvB,IAAMM,QAAQ,GAAGF,EAAE,CAACJ,EAAE,CAAC;EACvB,IAAAO,SAAA,GAAgCd,QAAQ,CAAC,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAA0CnB,QAAQ,CAAC;MACjDoB,CAAC,EAAER,QAAQ;MACXS,CAAC,EAAER;IACL,CAAC,CAAC;IAAAS,UAAA,GAAAN,cAAA,CAAAG,UAAA;IAHKI,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EAItC,IAAAG,UAAA,GAAoCzB,QAAQ,CAAC,KAAK,CAAC;IAAA0B,UAAA,GAAAV,cAAA,CAAAS,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAIG,eAAe,GAAG,CAAC;EAEvB,IAAMC,mBAAmB,GAAGhC,WAAW,CACrC,UAACiC,KAAK,EAAEC,MAAM,EAAEZ,CAAC,EAAEC,CAAC,EAAK;IACvB,IAAIf,YAAY,KAAK,aAAa,EAAE;MAClCkB,gBAAgB,CAAC;QACfJ,CAAC,EAAEa,IAAI,CAACC,GAAG,CACTD,IAAI,CAACE,GAAG,CACNC,MAAM,CAACC,UAAU,GAAGN,KAAK,EACzBK,MAAM,CAACC,UAAU,IAAIjB,CAAC,GAAGW,KAAK,CAChC,CAAC,EACD,CACF,CAAC;QACDV,CAAC,EAAEY,IAAI,CAACC,GAAG,CACTD,IAAI,CAACE,GAAG,CACNC,MAAM,CAACE,WAAW,GAAGN,MAAM,EAC3BI,MAAM,CAACE,WAAW,IAAIjB,CAAC,GAAGW,MAAM,CAClC,CAAC,EACD,CACF;MACF,CAAC,CAAC;MAEF;IACF;IAEAR,gBAAgB,CAAC;MACfJ,CAAC,EAAEa,IAAI,CAACE,GAAG,CAACF,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEd,CAAC,CAAC,EAAEgB,MAAM,CAACC,UAAU,GAAGN,KAAK,CAAC;MACtDV,CAAC,EAAEY,IAAI,CAACE,GAAG,CAACF,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEb,CAAC,CAAC,EAAEe,MAAM,CAACE,WAAW,GAAGN,MAAM;IACzD,CAAC,CAAC;EACJ,CAAC,EACD,CAAC1B,YAAY,CACf,CAAC;EAED,IAAMiC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,GAAG,EAAK;IAC7BA,GAAG,CAACC,cAAc,CAAC,CAAC;IAEpBb,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,IAAMc,eAAe,GAAG,SAAlBA,eAAeA,CAAIF,GAAG,EAAK;IAC/BA,GAAG,CAACC,cAAc,CAAC,CAAC;IAEpB,IAAQE,OAAO,GAAcH,GAAG,CAAxBG,OAAO;MAAEC,OAAO,GAAKJ,GAAG,CAAfI,OAAO;IACxB,IAAiBC,gBAAgB,GAAKzC,GAAG,CAAjC0C,OAAO;IAEf,IAAI,CAACD,gBAAgB,EAAE;MACrB;IACF;IAEA,IAAAE,qBAAA,GAKIF,gBAAgB,CAACG,qBAAqB,CAAC,CAAC;MAJ1CC,GAAG,GAAAF,qBAAA,CAAHE,GAAG;MACHC,IAAI,GAAAH,qBAAA,CAAJG,IAAI;MACJnB,KAAK,GAAAgB,qBAAA,CAALhB,KAAK;MACLC,MAAM,GAAAe,qBAAA,CAANf,MAAM;IAGRJ,aAAa,CAAC,IAAI,CAAC;IACnBV,WAAW,CAAC;MACViC,MAAM,EAAER,OAAO;MACfS,MAAM,EAAER,OAAO;MACfK,GAAG,EAAHA,GAAG;MACHC,IAAI,EAAJA,IAAI;MACJnB,KAAK,EAALA,KAAK;MACLC,MAAM,EAANA;IACF,CAAC,CAAC;EAEJ,CAAC;EAED,IAAMqB,eAAe,GAAGvD,WAAW,CACjC,UAAC0C,GAAG,EAAK;IACP,IAAiBK,gBAAgB,GAAKzC,GAAG,CAAjC0C,OAAO;IAEf,IAAI,CAACnB,UAAU,IAAI,CAACkB,gBAAgB,EAAE;IAEtCL,GAAG,CAACC,cAAc,CAAC,CAAC;IAEpB,IAAQE,OAAO,GAAcH,GAAG,CAAxBG,OAAO;MAAEC,OAAO,GAAKJ,GAAG,CAAfI,OAAO;IAExB,IAAMU,QAAQ,GAAG;MACflC,CAAC,EAAEH,QAAQ,CAACkC,MAAM,GAAGR,OAAO;MAC5BtB,CAAC,EAAEJ,QAAQ,CAACmC,MAAM,GAAGR;IACvB,CAAC;IAED,IAAQK,GAAG,GAA0BhC,QAAQ,CAArCgC,GAAG;MAAEC,IAAI,GAAoBjC,QAAQ,CAAhCiC,IAAI;MAAEnB,KAAK,GAAad,QAAQ,CAA1Bc,KAAK;MAAEC,MAAM,GAAKf,QAAQ,CAAnBe,MAAM;IAEhC,IAAMuB,cAAc,GAAGV,gBAAgB,CAACG,qBAAqB,CAAC,CAAC;IAC/D;IACA,IAAMQ,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACV,qBAAqB,CAAC,CAAC;IAC/E;IACA,IAAIO,cAAc,CAACL,IAAI,GAAGM,YAAY,CAACG,KAAK,IAAIJ,cAAc,CAACI,KAAK,GAAGH,YAAY,CAACN,IAAI,IAAIK,cAAc,CAACN,GAAG,GAAGO,YAAY,CAACI,MAAM,IAAIL,cAAc,CAACK,MAAM,GAAGJ,YAAY,CAACP,GAAG,EAAE;MAChL;MACApB,eAAe,GAAGI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAACoB,cAAc,CAACI,KAAK,EAAEH,YAAY,CAACG,KAAK,CAAC,GAAG1B,IAAI,CAACC,GAAG,CAACqB,cAAc,CAACL,IAAI,EAAEM,YAAY,CAACN,IAAI,CAAC,CAAC,GAAGjB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAACoB,cAAc,CAACK,MAAM,EAAEJ,YAAY,CAACI,MAAM,CAAC,GAAG3B,IAAI,CAACC,GAAG,CAACqB,cAAc,CAACN,GAAG,EAAEO,YAAY,CAACP,GAAG,CAAC,CAAC;IAC3P,CAAC,MAAM;MACL;MACApB,eAAe,GAAG,CAAC;IACrB;IACAgC,OAAO,CAACC,GAAG,CAACjC,eAAe,CAAC;IAC5BC,mBAAmB,CAACC,KAAK,EAAEC,MAAM,EAAEkB,IAAI,GAAGI,QAAQ,CAAClC,CAAC,EAAE6B,GAAG,GAAGK,QAAQ,CAACjC,CAAC,CAAC;IACvE,OAAO;MAAA,OAAMQ,eAAe;IAAA;EAC9B,CAAC,EACD,CAACF,UAAU,EAAEV,QAAQ,EAAEb,GAAG,EAAE0B,mBAAmB,CACjD,CAAC;EAED,IAAMiC,WAAW,GAAG,SAAdA,WAAWA,CAAIhC,KAAK,EAAEC,MAAM,EAAK;IACrC,IAAiBa,gBAAgB,GAAKzC,GAAG,CAAjC0C,OAAO;IACf,IAAAkB,sBAAA,GAKInB,gBAAgB,CAACG,qBAAqB,CAAC,CAAC;MAJ1CC,GAAG,GAAAe,sBAAA,CAAHf,GAAG;MACHC,IAAI,GAAAc,sBAAA,CAAJd,IAAI;MACGe,aAAa,GAAAD,sBAAA,CAApBjC,KAAK;MACGmC,cAAc,GAAAF,sBAAA,CAAtBhC,MAAM;IAGRF,mBAAmB,CACjBC,KAAK,aAALA,KAAK,cAALA,KAAK,GAAIkC,aAAa,EACtBjC,MAAM,aAANA,MAAM,cAANA,MAAM,GAAIkC,cAAc,EACxBhB,IAAI,EACJD,GACF,CAAC;EACH,CAAC;EAEDlD,SAAS,CAAC,YAAM;IACd0D,QAAQ,CAACU,gBAAgB,CAAC,WAAW,EAAEd,eAAe,CAAC;IACvDI,QAAQ,CAACU,gBAAgB,CAAC,SAAS,EAAE5B,aAAa,CAAC;IAEnD,OAAO,YAAM;MACXkB,QAAQ,CAACW,mBAAmB,CAAC,WAAW,EAAEf,eAAe,CAAC;MAC1DI,QAAQ,CAACW,mBAAmB,CAAC,SAAS,EAAE7B,aAAa,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,CAACc,eAAe,CAAC,CAAC;EAErB,OAAO;IACLC,QAAQ,EAAE/B,aAAa;IACvBmB,eAAe,EAAfA,eAAe;IACfqB,WAAW,EAAXA,WAAW;IACXV,eAAe,EAAfA;EACF,CAAC;AACH,CAAC;AAAClD,EAAA,CAnJWF,OAAO"},"metadata":{},"sourceType":"module"}