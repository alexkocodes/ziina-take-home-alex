{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Downloads/draggable-div-element-react-hook/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { useDrag } from \"./useDrag\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _this = this;\n  var positions = [];\n  for (var i = 0; i < 5; i++) {\n    var draggableRef = useRef(null);\n    var _useDrag = useDrag({\n        ref: draggableRef,\n        id: i\n      }),\n      position = _useDrag.position,\n      handleMouseDown = _useDrag.handleMouseDown;\n    positions.push({\n      position: position,\n      handleMouseDown: handleMouseDown,\n      id: i,\n      ref: draggableRef\n    });\n  }\n\n  // function to calculate the total visible area of the red box\n  var calculateVisibleArea = function calculateVisibleArea() {\n    var redBox = document.getElementById('red-box');\n    return redBox.offsetWidth * redBox.offsetHeight;\n  };\n  var visibleArea = calculateVisibleArea();\n  useEffect(function () {\n    var redBox = document.getElementById('red-box');\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          console.log('visible');\n        } else {\n          console.log('not visible');\n        }\n      });\n    });\n    observer.observe(redBox);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [positions.map(function (pos) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"draggable\",\n        onMouseDown: pos.handleMouseDown,\n        ref: pos.ref,\n        style: {\n          top: pos.position.y,\n          left: pos.position.x\n        }\n      }, pos.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"big-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"red-box\",\n        id: \"red-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: [\"Total Visible Area: \", calculateVisibleArea(), \" pixels\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zLDwhVyJEfxsklkooskzoCPFKpE=\", false, function () {\n  return [useDrag];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","useDrag","jsxDEV","_jsxDEV","App","_s","_this","positions","i","draggableRef","_useDrag","ref","id","position","handleMouseDown","push","calculateVisibleArea","redBox","document","getElementById","offsetWidth","offsetHeight","visibleArea","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","console","log","observe","className","children","map","pos","onMouseDown","style","top","y","left","x","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alex/Downloads/draggable-div-element-react-hook/src/App.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { useDrag } from \"./useDrag\";\n\nexport default function App() {\n\n  const positions = [];\n  for (let i = 0; i < 5; i++) {\n    const draggableRef = useRef(null);\n    const { position: position, handleMouseDown: handleMouseDown } = useDrag({\n      ref: draggableRef,\n      id: i,\n    });\n    positions.push({ position, handleMouseDown, id: i, ref: draggableRef });\n  }\n\n  // function to calculate the total visible area of the red box\n  const calculateVisibleArea = () => {\n    const redBox = document.getElementById('red-box');\n    return redBox.offsetWidth * redBox.offsetHeight;\n  };\n\n  const visibleArea = calculateVisibleArea();\n\n  useEffect(() => {\n    const redBox = document.getElementById('red-box');\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          console.log('visible');\n        } else {\n          console.log('not visible');\n        }\n      });\n    });\n    observer.observe(redBox);\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      {positions.map((pos) => (\n        <div\n          key={pos.id}\n          className=\"draggable\"\n          onMouseDown={pos.handleMouseDown}\n          ref={pos.ref}\n          style={{\n            top: pos.position.y,\n            left: pos.position.x\n          }}\n        >\n        </div>\n      ))}\n      <div className=\"big-container\">\n        <div\n          className=\"red-box\"\n          id=\"red-box\"\n        />\n        <div className=\"label\">\n          Total Visible Area: {calculateVisibleArea()} pixels\n        </div>\n      </div>\n\n    </div >\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}