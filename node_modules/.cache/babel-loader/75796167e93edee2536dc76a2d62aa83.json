{"ast":null,"code":"import _slicedToArray from \"/Users/alex/Downloads/draggable-div-element-react-hook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/alex/Downloads/draggable-div-element-react-hook/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { useDrag } from \"./useDrag\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _this = this;\n  var positions = [];\n  for (var i = 0; i < 5; i++) {\n    var callBack = function callBack(e) {\n      console.log(e);\n    };\n    var draggableRef = useRef(null);\n    var _useDrag = useDrag({\n        ref: draggableRef,\n        id: i,\n        updateArea: callBack\n      }),\n      position = _useDrag.position,\n      handleMouseDown = _useDrag.handleMouseDown;\n    positions.push({\n      position: position,\n      handleMouseDown: handleMouseDown,\n      id: i,\n      ref: draggableRef\n    });\n  }\n\n  // function to calculate the total visible area of the red box\n  var calculateVisibleArea = function calculateVisibleArea() {\n    var redBox = document.getElementById('red-box');\n    return redBox.offsetWidth * redBox.offsetHeight;\n  };\n\n  // variable to store the total visible area of the red box\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    visibleArea = _useState2[0],\n    setVisibleArea = _useState2[1];\n  useEffect(function () {\n    setVisibleArea(calculateVisibleArea());\n  }, []);\n  // const updateVisibleArea = (e) => {\n  //   let all_overlapping_area = 0\n  //   positions.forEach((pos) => {\n  //     // sum up all the overlapping area \n  //     console.log(pos);\n  //     all_overlapping_area += pos.handleMouseMove(e);\n  //   });\n  //   console.log(all_overlapping_area)\n  //   //setVisibleArea(visibleArea - all_overlapping_area);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [positions.map(function (pos) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"draggable\",\n        onMouseDown: pos.handleMouseDown,\n        ref: pos.ref,\n        style: {\n          top: pos.position.y,\n          left: pos.position.x\n        }\n      }, pos.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"big-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"red-box\",\n        id: \"red-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: [\"Total Visible Area: \", visibleArea, \" pixels\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"v+1zgCzwBaZf4U68gWRLwYTfuMM=\", false, function () {\n  return [useDrag];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","useDrag","jsxDEV","_jsxDEV","App","_s","_this","positions","i","callBack","e","console","log","draggableRef","_useDrag","ref","id","updateArea","position","handleMouseDown","push","calculateVisibleArea","redBox","document","getElementById","offsetWidth","offsetHeight","_useState","_useState2","_slicedToArray","visibleArea","setVisibleArea","className","children","map","pos","onMouseDown","style","top","y","left","x","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alex/Downloads/draggable-div-element-react-hook/src/App.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { useDrag } from \"./useDrag\";\n\nexport default function App() {\n\n\n  const positions = [];\n  for (let i = 0; i < 5; i++) {\n    const callBack = (e) => {\n      console.log(e);\n    }\n    const draggableRef = useRef(null);\n    const { position: position, handleMouseDown: handleMouseDown } = useDrag({\n      ref: draggableRef,\n      id: i,\n      updateArea: callBack,\n    });\n    positions.push({ position, handleMouseDown, id: i, ref: draggableRef });\n  }\n\n  // function to calculate the total visible area of the red box\n  const calculateVisibleArea = () => {\n    const redBox = document.getElementById('red-box');\n    return redBox.offsetWidth * redBox.offsetHeight;\n  };\n\n  // variable to store the total visible area of the red box\n  const [visibleArea, setVisibleArea] = useState(0);\n\n  useEffect(() => {\n    setVisibleArea(calculateVisibleArea());\n  }, []);\n  // const updateVisibleArea = (e) => {\n  //   let all_overlapping_area = 0\n  //   positions.forEach((pos) => {\n  //     // sum up all the overlapping area \n  //     console.log(pos);\n  //     all_overlapping_area += pos.handleMouseMove(e);\n  //   });\n  //   console.log(all_overlapping_area)\n  //   //setVisibleArea(visibleArea - all_overlapping_area);\n  // }\n\n  return (\n    <div className=\"App\">\n      {positions.map((pos) => (\n        <div\n          key={pos.id}\n          className=\"draggable\"\n          onMouseDown={pos.handleMouseDown}\n          ref={pos.ref}\n          style={{\n            top: pos.position.y,\n            left: pos.position.x\n          }}\n        >\n        </div>\n      ))}\n      <div className=\"big-container\">\n        <div\n          className=\"red-box\"\n          id=\"red-box\"\n        />\n        <div className=\"label\">\n          Total Visible Area: {visibleArea} pixels\n        </div>\n      </div>\n\n    </div >\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}