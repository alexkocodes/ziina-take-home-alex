{"ast":null,"code":"import _slicedToArray from \"/Users/alex/Downloads/draggable-div-element-react-hook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _taggedTemplateLiteral from \"/Users/alex/Downloads/draggable-div-element-react-hook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/Users/alex/Downloads/draggable-div-element-react-hook/src/App.js\",\n  _templateObject,\n  _templateObject2,\n  _templateObject3,\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { useDrag } from \"./useDrag\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CheckBoxWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  position: relative;\\n\"])));\n_c = CheckBoxWrapper;\nvar CheckBoxLabel = styled.label(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 42px;\\n  height: 26px;\\n  border-radius: 15px;\\n  background: #bebebe;\\n  cursor: pointer;\\n  &::after {\\n    content: \\\"\\\";\\n    display: block;\\n    border-radius: 50%;\\n    width: 18px;\\n    height: 18px;\\n    margin: 3px;\\n    background: #ffffff;\\n    box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\\n    transition: 0.2s;\\n  }\\n\"])));\n_c2 = CheckBoxLabel;\nvar CheckBox = styled.input(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  opacity: 0;\\n  z-index: 1;\\n  border-radius: 15px;\\n  width: 42px;\\n  height: 26px;\\n  &:checked + \", \" {\\n    background: #4fbe79;\\n    &::after {\\n      content: \\\"\\\";\\n      display: block;\\n      border-radius: 50%;\\n      width: 18px;\\n      height: 18px;\\n      margin-left: 21px;\\n      transition: 0.2s;\\n    }\\n  }\\n\"])), CheckBoxLabel);\n_c3 = CheckBox;\nexport default function App() {\n  _s();\n  var _this = this;\n  var _useState = useState(\"0%\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    shapes = _useState2[0],\n    setShapes = _useState2[1];\n  var positions = [];\n\n  // variable to store the total visible area of the red box\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    visibleArea = _useState4[0],\n    setVisibleArea = _useState4[1];\n\n  // an array to store the overlapping area of each draggable element\n  var _useState5 = useState([0, 0, 0, 0, 0]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    overlappingArea = _useState6[0],\n    setOverlappingArea = _useState6[1];\n  var _loop = function _loop(i) {\n    var draggableRef = useRef(null);\n    var _useDrag = useDrag({\n        ref: draggableRef,\n        id: i,\n        callBack: function callBack(e) {\n          // set the overlapping area of the draggable element, it cannot exceed 6400\n          if (e > 6400) {\n            overlappingArea[i] = 6400;\n          } else {\n            overlappingArea[i] = e;\n          }\n          // calculate the total overlapping area of all draggable elements\n          var totalOverlappingArea = 0;\n          for (var j = 0; j < 5; j++) {\n            totalOverlappingArea += overlappingArea[j];\n          }\n          // calculate the total visible area of the red box, but only when the total overlapping area has changed\n          setVisibleArea(calculateVisibleArea() - totalOverlappingArea);\n        }\n      }),\n      position = _useDrag.position,\n      handleMouseDown = _useDrag.handleMouseDown;\n    positions.push({\n      position: position,\n      handleMouseDown: handleMouseDown,\n      id: i,\n      ref: draggableRef\n    });\n  };\n  for (var i = 0; i < 5; i++) {\n    _loop(i);\n  }\n\n  // function to calculate the total visible area of the red box\n  var calculateVisibleArea = function calculateVisibleArea() {\n    var redBox = document.getElementById('red-box');\n    return redBox.offsetWidth * redBox.offsetHeight;\n  };\n  useEffect(function () {\n    setVisibleArea(calculateVisibleArea());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CheckBoxWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(CheckBox, {\n        id: \"checkbox\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CheckBoxLabel, {\n        htmlFor: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), positions.map(function (pos) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"draggable\",\n        onMouseDown: pos.handleMouseDown,\n        ref: pos.ref,\n        style: {\n          top: pos.position.y,\n          left: pos.position.x,\n          borderRadius: shapes\n        }\n      }, pos.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"big-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"red-box\",\n        id: \"red-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: [\"Total Visible Area: \", visibleArea, \" pixels\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WNwhSSEN4LN/h0yN5wN9tMsR8zg=\", false, function () {\n  return [useDrag];\n});\n_c4 = App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CheckBoxWrapper\");\n$RefreshReg$(_c2, \"CheckBoxLabel\");\n$RefreshReg$(_c3, \"CheckBox\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","useDrag","styled","jsxDEV","_jsxDEV","CheckBoxWrapper","div","_templateObject","_taggedTemplateLiteral","_c","CheckBoxLabel","label","_templateObject2","_c2","CheckBox","input","_templateObject3","_c3","App","_s","_this","_useState","_useState2","_slicedToArray","shapes","setShapes","positions","_useState3","_useState4","visibleArea","setVisibleArea","_useState5","_useState6","overlappingArea","setOverlappingArea","_loop","i","draggableRef","_useDrag","ref","id","callBack","e","totalOverlappingArea","j","calculateVisibleArea","position","handleMouseDown","push","redBox","document","getElementById","offsetWidth","offsetHeight","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","map","pos","onMouseDown","style","top","y","left","x","borderRadius","_c4","$RefreshReg$"],"sources":["/Users/alex/Downloads/draggable-div-element-react-hook/src/App.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { useDrag } from \"./useDrag\";\nimport styled from \"styled-components\";\n\nconst CheckBoxWrapper = styled.div`\n  position: relative;\n`;\nconst CheckBoxLabel = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 42px;\n  height: 26px;\n  border-radius: 15px;\n  background: #bebebe;\n  cursor: pointer;\n  &::after {\n    content: \"\";\n    display: block;\n    border-radius: 50%;\n    width: 18px;\n    height: 18px;\n    margin: 3px;\n    background: #ffffff;\n    box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\n    transition: 0.2s;\n  }\n`;\nconst CheckBox = styled.input`\n  opacity: 0;\n  z-index: 1;\n  border-radius: 15px;\n  width: 42px;\n  height: 26px;\n  &:checked + ${CheckBoxLabel} {\n    background: #4fbe79;\n    &::after {\n      content: \"\";\n      display: block;\n      border-radius: 50%;\n      width: 18px;\n      height: 18px;\n      margin-left: 21px;\n      transition: 0.2s;\n    }\n  }\n`;\nexport default function App() {\n\n  const [shapes, setShapes] = useState(\"0%\");\n  const positions = [];\n\n  // variable to store the total visible area of the red box\n  const [visibleArea, setVisibleArea] = useState(0);\n\n  // an array to store the overlapping area of each draggable element\n  const [overlappingArea, setOverlappingArea] = useState([0, 0, 0, 0, 0]);\n\n  for (let i = 0; i < 5; i++) {\n    const draggableRef = useRef(null);\n    const { position: position, handleMouseDown: handleMouseDown } = useDrag({\n      ref: draggableRef,\n      id: i,\n      callBack: function (e) {\n        // set the overlapping area of the draggable element, it cannot exceed 6400\n        if (e > 6400) {\n          overlappingArea[i] = 6400;\n        } else {\n          overlappingArea[i] = e;\n        }\n        // calculate the total overlapping area of all draggable elements\n        let totalOverlappingArea = 0;\n        for (let j = 0; j < 5; j++) {\n          totalOverlappingArea += overlappingArea[j];\n        }\n        // calculate the total visible area of the red box, but only when the total overlapping area has changed\n        setVisibleArea(calculateVisibleArea() - totalOverlappingArea);\n      },\n    });\n    positions.push({ position, handleMouseDown, id: i, ref: draggableRef });\n  }\n\n  // function to calculate the total visible area of the red box\n  const calculateVisibleArea = () => {\n    const redBox = document.getElementById('red-box');\n    return redBox.offsetWidth * redBox.offsetHeight;\n  };\n\n  useEffect(() => {\n    setVisibleArea(calculateVisibleArea());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <CheckBoxWrapper>\n        <CheckBox id=\"checkbox\" type=\"checkbox\" />\n        <CheckBoxLabel htmlFor=\"checkbox\" />\n      </CheckBoxWrapper>\n      {positions.map((pos) => (\n        <div\n          key={pos.id}\n          className=\"draggable\"\n          onMouseDown={pos.handleMouseDown}\n          ref={pos.ref}\n          style={{\n            top: pos.position.y,\n            left: pos.position.x,\n            borderRadius: shapes,\n          }}\n        >\n        </div>\n      ))}\n      <div className=\"big-container\">\n        <div\n          className=\"red-box\"\n          id=\"red-box\"\n        />\n        <div className=\"label\">\n          Total Visible Area: {visibleArea} pixels\n        </div>\n      </div>\n\n    </div >\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}