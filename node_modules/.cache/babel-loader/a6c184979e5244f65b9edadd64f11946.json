{"ast":null,"code":"import _slicedToArray from \"/Users/alex/Downloads/ziina-take-home/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/alex/Downloads/ziina-take-home/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { useDrag } from \"./useDrag\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _this = this;\n  var _useState = useState(\"0%\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    shapes = _useState2[0],\n    setShapes = _useState2[1];\n  var positions = [];\n\n  // variable to store the total visible area of the red box\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    visibleArea = _useState4[0],\n    setVisibleArea = _useState4[1];\n  for (var i = 0; i < 5; i++) {\n    var draggableRef = useRef(null);\n    var _useDrag = useDrag({\n        ref: draggableRef,\n        id: i,\n        callBack: function callBack(e) {\n          var totalOverlappingArea = e;\n          // update the total visible area of the red box by subtracting the overlapping area of all the blue boxes\n          setVisibleArea(calculateVisibleArea() - totalOverlappingArea);\n        }\n      }),\n      position = _useDrag.position,\n      handleMouseDown = _useDrag.handleMouseDown;\n    positions.push({\n      position: position,\n      handleMouseDown: handleMouseDown,\n      id: i,\n      ref: draggableRef\n    }); // push the position and handleMouseDown function of each draggable element into the array\n  }\n\n  // function to calculate the total visible area of the red box\n  var calculateVisibleArea = function calculateVisibleArea() {\n    var redBox = document.getElementById('red-box');\n    return redBox.offsetWidth * redBox.offsetHeight;\n  };\n  useEffect(function () {\n    setVisibleArea(calculateVisibleArea());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button1\",\n      onClick: function onClick() {\n        if (shapes === \"0%\") {\n          setShapes(\"50%\");\n        } else if (shapes === \"50%\") {\n          setShapes(\"0%\");\n        }\n      },\n      children: \"Toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), positions.map(function (pos) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"draggable\",\n        onMouseDown: pos.handleMouseDown,\n        ref: pos.ref,\n        id: pos.id,\n        style: {\n          top: pos.position.y,\n          // set the top position of the draggable element, which gets updated by the useDrag hook\n          left: pos.position.x,\n          // set the left position of the draggable element which gets updated by the useDrag hook\n          borderRadius: shapes\n        }\n      }, pos.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"big-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"red-box\",\n        id: \"red-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: [\"Total Visible Area: \", visibleArea, \" pixels\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z5AguNgip4ufNHMVAaXIFecpJKI=\", false, function () {\n  return [useDrag];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","useDrag","jsxDEV","_jsxDEV","App","_s","_this","_useState","_useState2","_slicedToArray","shapes","setShapes","positions","_useState3","_useState4","visibleArea","setVisibleArea","i","draggableRef","_useDrag","ref","id","callBack","e","totalOverlappingArea","calculateVisibleArea","position","handleMouseDown","push","redBox","document","getElementById","offsetWidth","offsetHeight","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","pos","onMouseDown","style","top","y","left","x","borderRadius","_c","$RefreshReg$"],"sources":["/Users/alex/Downloads/ziina-take-home/src/App.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { useDrag } from \"./useDrag\";\n\nexport default function App() {\n\n  const [shapes, setShapes] = useState(\"0%\");\n  const positions = [];\n\n  // variable to store the total visible area of the red box\n  const [visibleArea, setVisibleArea] = useState(0);\n\n  for (let i = 0; i < 5; i++) {\n    const draggableRef = useRef(null);\n    const { position: position, handleMouseDown: handleMouseDown } = useDrag({\n      ref: draggableRef,\n      id: i,\n      callBack: function (e) {\n        let totalOverlappingArea = e;\n        // update the total visible area of the red box by subtracting the overlapping area of all the blue boxes\n        setVisibleArea(calculateVisibleArea() - totalOverlappingArea);\n      },\n    });\n    positions.push({ position, handleMouseDown, id: i, ref: draggableRef }); // push the position and handleMouseDown function of each draggable element into the array\n  }\n\n  // function to calculate the total visible area of the red box\n  const calculateVisibleArea = () => {\n    const redBox = document.getElementById('red-box');\n    return redBox.offsetWidth * redBox.offsetHeight;\n  };\n\n  useEffect(() => {\n    setVisibleArea(calculateVisibleArea());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <button className=\"button button1\" onClick={\n        () => {\n          if (shapes === \"0%\") {\n            setShapes(\"50%\");\n          }\n          else if (shapes === \"50%\") {\n            setShapes(\"0%\");\n          }\n        }\n      }>Toggle</button>\n      {positions.map((pos) => (\n        <div\n          key={pos.id}\n          className=\"draggable\"\n          onMouseDown={pos.handleMouseDown}\n          ref={pos.ref}\n          id={pos.id}\n          style={{\n            top: pos.position.y, // set the top position of the draggable element, which gets updated by the useDrag hook\n            left: pos.position.x, // set the left position of the draggable element which gets updated by the useDrag hook\n            borderRadius: shapes,\n          }}\n        >\n        </div>\n      ))}\n      <div className=\"big-container\">\n        <div\n          className=\"red-box\"\n          id=\"red-box\"\n        />\n        <div className=\"label\">\n          Total Visible Area: {visibleArea} pixels\n        </div>\n      </div>\n\n    </div >\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}